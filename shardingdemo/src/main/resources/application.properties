spring.shardingsphere.mode.type=Standalone
spring.shardingsphere.mode.repository.type=jdbc

spring.shardingsphere.datasource.names=ds_0,ds_1,ds_2

spring.shardingsphere.datasource.ds_0.name=ds0
spring.shardingsphere.datasource.ds_0.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.ds_0.driver-class-name=com.alibaba.druid.proxy.DruidDriver
spring.shardingsphere.datasource.ds_0.jdbc-url=jdbc:mysql://localhost:3306/ds_1
spring.shardingsphere.datasource.ds_0.url=jdbc:mysql://localhost:3306/ds_1
spring.shardingsphere.datasource.ds_0.username=root
spring.shardingsphere.datasource.ds_0.password=123456


spring.shardingsphere.datasource.ds_1.name=ds1
spring.shardingsphere.datasource.ds_1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.ds_1.driver-class-name=com.alibaba.druid.proxy.DruidDriver
spring.shardingsphere.datasource.ds_1.jdbc-url=jdbc:mysql://localhost:3306/ds_2
spring.shardingsphere.datasource.ds_1.url=jdbc:mysql://localhost:3306/ds_2
spring.shardingsphere.datasource.ds_1.username=root
spring.shardingsphere.datasource.ds_1.password=123456

spring.shardingsphere.datasource.ds_2.name=ds2
spring.shardingsphere.datasource.ds_2.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.ds_2.driver-class-name=com.alibaba.druid.proxy.DruidDriver
spring.shardingsphere.datasource.ds_2.jdbc-url=jdbc:mysql://localhost:3306/ds_1
spring.shardingsphere.datasource.ds_2.url=jdbc:mysql://localhost:3306/ds_1
spring.shardingsphere.datasource.ds_2.username=root
spring.shardingsphere.datasource.ds_2.password=123456


#spring.shardingsphere.rules.sharding.default-database-strategy.standard.sharding-column=order_id
#spring.shardingsphere.rules.sharding.default-database-strategy.standard.sharding-algorithm-name=database-inline
#spring.shardingsphere.rules.sharding.sharding-algorithms.database-inline.type=INLINE
#spring.shardingsphere.rules.sharding.sharding-algorithms.database-inline.props.algorithm-expression=ds_$->{order_id % 3}


spring.shardingsphere.rules.sharding.tables.t_order.actual-data-nodes=ds_1.t_order_$->{0..1}
spring.shardingsphere.rules.sharding.tables.t_order.table-strategy.standard.sharding-column=order_id
spring.shardingsphere.rules.sharding.tables.t_order.table-strategy.standard.sharding-algorithm-name=t-order-inline
spring.shardingsphere.rules.sharding.tables.t_order.key-generate-strategy.column=order_id
spring.shardingsphere.rules.sharding.tables.t_order.key-generate-strategy.key-generator-name=snowflake


spring.shardingsphere.rules.sharding.sharding-algorithms.t-order-inline.type=INLINE
spring.shardingsphere.rules.sharding.sharding-algorithms.t-order-inline.props.algorithm-expression=t_order_$->{order_id % 2}

#spring.shardingsphere.rules.sharding.sharding-algorithms.t-order-item-inline.type=INLINE
#spring.shardingsphere.rules.sharding.sharding-algorithms.t-order-item-inline.props.algorithm-expression=t_order_item_$->{order_id % 2}

spring.shardingsphere.rules.sharding.key-generators.snowflake.type=SNOWFLAKE
spring.shardingsphere.props.sql-show=true